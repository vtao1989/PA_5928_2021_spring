limits = c(0, 65000)) + # Coordinates
theme_bw() # Themes
library(ggplot2)
minneapolis <- read.csv('minneapolis.csv')
ggplot(minneapolis, # Data
aes(x = AGE, y = INCTOT)) + # Aesthetics
geom_point() + # Geometries
facet_wrap(vars(YEAR)) + # Facets
stat_smooth(method = "lm", se = FALSE, col = "blue") + # Statistics
scale_x_continuous('Miles/(US) gallon',
limits = c(0, 100)) +
scale_y_continuous('Weight (1000 lbs)',
limits = c(0, 65000)) + # Coordinates
theme_bw() # Themes
library(ggplot2)
minneapolis <- read.csv('minneapolis.csv')
ggplot(minneapolis, # Data
aes(x = AGE, y = INCTOT)) + # Aesthetics
geom_point() + # Geometries
facet_wrap(vars(YEAR)) + # Facets
stat_smooth(method = "gam", se = FALSE, col = "blue") + # Statistics
scale_x_continuous('Miles/(US) gallon',
limits = c(0, 100)) +
scale_y_continuous('Weight (1000 lbs)',
limits = c(0, 65000)) + # Coordinates
theme_bw() # Themes
library(ggplot2)
minneapolis <- read.csv('minneapolis.csv')
ggplot(minneapolis, # Data
aes(x = AGE, y = INCTOT)) + # Aesthetics
geom_point() + # Geometries
facet_wrap(vars(YEAR)) + # Facets
stat_smooth(method = "gam", se = FALSE, col = "blue") + # Statistics
scale_x_continuous('Miles/(US) gallon',
limits = c(0, 100)) +
scale_y_continuous('Weight (1000 lbs)',
limits = c(0, 70000)) + # Coordinates
theme_bw() # Themes
library(ggplot2)
minneapolis <- read.csv('minneapolis.csv')
ggplot(minneapolis, # Data
aes(x = AGE, y = INCTOT)) + # Aesthetics
geom_point() + # Geometries
facet_wrap(vars(YEAR)) + # Facets
stat_smooth(method = "gam", se = FALSE, col = "blue") + # Statistics
scale_x_continuous('Miles/(US) gallon',
limits = c(0, 100)) +
scale_y_continuous('Weight (1000 lbs)') + # Coordinates
theme_bw() # Themes
library(ggplot2)
minneapolis <- read.csv('minneapolis.csv')
ggplot(minneapolis, # Data
aes(x = AGE, y = INCTOT)) + # Aesthetics
geom_point() + # Geometries
facet_wrap(vars(YEAR)) + # Facets
stat_smooth(method = "gam", se = FALSE, col = "blue") + # Statistics
scale_x_continuous('Age',
limits = c(0, 100)) +
scale_y_continuous('Personal income (dollars)') + # Coordinates
theme_bw() # Themes
library(ggplot2)
minneapolis <- read.csv('minneapolis.csv')
ggplot(minneapolis, # Data
aes(x = AGE, y = INCTOT)) + # Aesthetics
geom_point() + # Geometries
facet_wrap(vars(YEAR)) + # Facets
stat_smooth(method = "gam", se = FALSE, col = "blue") + # Statistics
scale_x_continuous('Age',
limits = c(0, 100)) +
scale_y_continuous('Personal income (dollars)') + # Coordinates
labs(title = 'Age and personal income in Minneapolis (2010-2019)') +
theme_bw() # Themes
ggplot(minneapolis, # Data
aes(x = AGE, y = TOTINC)) + # Aesthetics
geom_point() # Geometries
ggplot(minneapolis, # Data
aes(x = AGE, y = INCTOT)) + # Aesthetics
geom_point() # Geometries
ggplot(minneapolis,
aes(x = AGE, y = INCTOT, col = RACE)) +
geom_point()
ggplot(minneapolis,
aes(x = AGE, y = INCTOT, col = factor(RACE))) +
geom_point()
names(minneapolis)
ggplot(minneapolis,
aes(x = AGE, y = INCTOT, col = factor(HISPAN))) +
geom_point()
ggplot(minneapolis,
aes(x = AGE, y = INCTOT, col = factor(EDUC))) +
geom_point()
ggplot(minneapolis,
aes(x = AGE, y = INCTOT, col = EDUC)) +
geom_point()
ggplot(minneapolis,
aes(x = AGE, y = INCTOT, col = EDUC)) +
geom_point()
ggplot(minneapolis,
aes(x = AGE, y = INCTOT, col = EDUC)) +
geom_point(size = 1)
ggplot(minneapolis,
aes(x = AGE, y = INCTOT, col = EDUC)) +
geom_point()
ggplot(mtcars,
aes(x = mpg, y = wt, col = factor(EMPSTAT))) +
geom_point()
ggplot(minneapolis,
aes(x = AGE, y = INCTOT, col = EMPSTAT)) +
geom_point()
ggplot(minneapolis,
aes(x = AGE, y = INCTOT, col = factor(EMPSTAT))) +
geom_point()
minneapolis_empstat <- filter(minneapolis, EMPSTAT %in% c(1, 2))
minneapolis_empstat <- filter(minneapolis, EMPSTAT == 1 | EMPSTAT == 2)
library(dplyr)
minneapolis_empstat <- filter(minneapolis, EMPSTAT == 1 | EMPSTAT == 2)
ggplot(minneapolis_empstat,
aes(x = AGE, y = INCTOT, col = factor(EMPSTAT))) +
geom_point()
library(dplyr)
minneapolis_empstat <- filter(minneapolis, EMPSTAT == 1 | EMPSTAT == 2)
ggplot(minneapolis_empstat,
aes(x = AGE, y = INCTOT, col = factor(EMPSTAT))) +
geom_point()
ggplot(minneapolis,
aes(x = AGE, y = INCTOT, col = factor(EMPSTAT))) +
geom_point()
library(ggplot2)
minneapolis <- read.csv('minneapolis.csv')
ggplot(minneapolis, ## Data
aes(x = AGE, y = INCTOT)) + ## Aesthetics
geom_point() + ## Geometries
facet_wrap(vars(YEAR)) + ## Facets
stat_smooth(method = "gam", se = FALSE, col = "blue") + # Statistics
scale_x_continuous('Age', limits = c(0, 100)) +
scale_y_continuous('Personal income (dollars)') + # Coordinates
labs(title = 'Age and personal income in Minneapolis (2010-2019)') +
theme_bw() # Themes
minneapolis_2017 <- filter(minneapolis, YEAR == 2017)
library(ggplot2)
library(dplyr)
minneapolis <- read.csv('minneapolis.csv')
library(ggplot2)
library(dplyr)
minneapolis <- read.csv('minneapolis.csv')
library(ggplot2)
library(dplyr)
minneapolis <- read.csv('minneapolis.csv')
minneapolis_2017 <- filter(minneapolis, YEAR == 2017)
ggplot(minneapolis_2017, # Data
aes(x = AGE, y = INCTOT)) + # Aesthetics
geom_point() # Geometries
ggplot(minneapolis_2017,
aes(x = AGE, y = INCTOT, col = EDUC)) +
geom_point()
ggplot(minneapolis_2017,
aes(x = AGE, y = INCTOT, col = factor(EMPSTAT))) +
geom_point()
table(minneapolis_2017$EMPSTAT)
minneapolis_emp <- minneapolis_2017 %>%
filter(EMPSTAT != 0) %>%
mutate(
EMPSTAT = case_when(
EMPSTAT == 1 ~ 'Employed',
EMPSTAT == 2 ~ 'Unemployed',
EMPSTAT == 3 ~ 'Not in labor force'
)
)
ggplot(minneapolis_emp,
aes(x = AGE, y = INCTOT, col = EMPSTAT)) +
geom_point()
minneapolis_emp <- minneapolis_2017 %>%
filter(EMPSTAT != 0)
ggplot(minneapolis_emp,
aes(x = AGE, y = INCTOT, col = EMPSTAT)) +
geom_point()
minneapolis_emp <- minneapolis_2017 %>%
filter(EMPSTAT != 0)
ggplot(minneapolis_emp,
aes(x = AGE, y = INCTOT, col = factor(EMPSTAT))) +
geom_point()
minneapolis_emp <- minneapolis_2017 %>%
filter(EMPSTAT != 0) %>%
mutate(
EMPSTAT = case_when(
EMPSTAT == 1 ~ 'Employed',
EMPSTAT == 2 ~ 'Unemployed',
EMPSTAT == 3 ~ 'Not in labor force'
)
)
ggplot(minneapolis_emp,
aes(x = AGE, y = INCTOT, col = EMPSTAT)) +
geom_point()
ggplot(minneapolis_2017,
aes(x = AGE, y = INCTOT, alpha = EDUC)) +
geom_point()
ggplot(minneapolis_2017,
aes(x = AGE, y = INCTOT, col = EDUC)) +
geom_point()
ggplot(minneapolis_2017,
aes(x = EDUC)) +
geom_bar()
ggplot(minneapolis,
aes(x = YEAR)) +
geom_bar()
ggplot(minneapolis_2017,
aes(x = EDUC)) +
geom_bar()
ggplot(minneapolis_2017,
aes(x = RACE)) +
geom_bar()
minneaplis_race <- minneapolis_2017 %>%
group_by(RACE) %>%
summarise(count = n())
ggplot(minneaplis_race, aes(x = RACE, y = count)) +
geom_bar(stat = 'identity') # you need to specify stat = 'identity' to plot the actual value for each year, not count
ggplot(minneaplis_race, aes(x = RACE, y = count)) +
geom_col()
data(economics)
ggplot(economics,
aes(x = date, y = unemploy)) +
geom_line(col = 'Blue') # indicate the color of the line by setting col = 'Blue'
minneapolis_year <- minneapolis %>%
group_by(YEAR) %>%
summarise(AvgInc = mean(INCTOT, na.rm = T))
ggplot(minneapolis_year,
aes(x = YEAR, y = AvgInc)) +
geom_line(col = 'Blue') # indicate the color of the line by setting col = 'Blue'
ggplot(minneapolis, aes(x = YEAR, y = INCTOT)) +
geom_boxplot()
ggplot(minneapolis, aes(x = factor(YEAR), y = INCTOT)) +
geom_boxplot()
ggplot(minneapolis, aes(x = factor(YEAR), y = AGE)) +
geom_boxplot()
ggplot(minneapolis, aes(x = factor(YEAR), y = INCTOT)) +
geom_boxplot()
ggplot(minneapolis, aes(x = factor(YEAR), y = AGE)) +
geom_boxplot()
ggplot(minneapolis_year, aes(x = '', y = AvgInc, fill = factor(YEAR))) +
geom_bar(width = 1, stat = 'identity') +
coord_polar('y') # transfer the coordinate system to the polar one
minneaplis_respondent <- minneapolis %>%
group_by(YEAR) %>%
summarise(count = n())
ggplot(minneapolis_year, aes(x = '', y = count, fill = factor(YEAR))) +
geom_bar(width = 1, stat = 'identity') +
coord_polar('y') # transfer the coordinate system to the polar one
minneaplis_respondent <- minneapolis %>%
group_by(YEAR) %>%
summarise(count = n())
ggplot(minneaplis_respondent, aes(x = '', y = count, fill = factor(YEAR))) +
geom_bar(width = 1, stat = 'identity') +
coord_polar('y') # transfer the coordinate system to the polar one
minneaplis_respondent <- minneapolis %>%
filter(YEAR < 2015) %>%
group_by(YEAR) %>%
summarise(count = n())
ggplot(minneaplis_respondent, aes(x = '', y = count, fill = factor(YEAR))) +
geom_bar(width = 1, stat = 'identity') +
coord_polar('y') # transfer the coordinate system to the polar one
ggplot(minneaplis_respondent, aes(x = '', y = count, fill = factor(YEAR))) +
geom_bar(width = 1, stat = 'identity')
ggplot(minneaplis_respondent, aes(x = '', y = count, fill = factor(YEAR))) +
geom_bar(width = 1, stat = 'identity') +
coord_polar('y')
p <- ggplot(minneapolis_2017, # store the plot result in variable p
aes(x = AGE, y = INCTOT))
geom_point()
p + facet_grid(. ~ RACE) # Facets, for each number of foward gears
p
p <- ggplot(minneapolis_2017, # store the plot result in variable p
aes(x = AGE, y = TOTINC))
geom_point()
p + facet_grid(. ~ RACE) # Facets, for each number of foward gears
ggplot(minneapolis_2017, # store the plot result in variable p
aes(x = AGE, y = INCTOT))
geom_point()
p <- ggplot(minneapolis_2017, # store the plot result in variable p
aes(x = AGE, y = INCTOT)) +
geom_point()
p + facet_grid(. ~ RACE) # Facets, for each number of foward gears
p + facet_grid(RACE ~ .) # Facets, pay attention to the position of gear and the dot sign
p + facet_grid(SEX ~ RACE) # add vs
p + facet_grid(SEX ~ RACE, margins = T) # add aggregation plots for each row and column
p + facet_grid(SEX ~ RACE, labeller = label_both) # add more info in the label
p <- ggplot(minneapolis_2017,
aes(x = AGE, y = TOTINC)) +
geom_point()
p + stat_smooth(method = "lm") # linear line
p <- ggplot(minneapolis_2017,
aes(x = AGE, y = INCTOT)) +
geom_point()
p + stat_smooth(method = "lm") # linear line
p + stat_smooth(method = 'loess') # non-linear line
p <- ggplot(minneapolis_2017, aes(INCTOT))
p + geom_histogram(binwidth = 5) # the width of each category is 5
p <- ggplot(minneapolis_2017, aes(INCTOT))
p + geom_histogram() # the width of each category is 5
p <- ggplot(minneapolis_2017, aes(INCTOT))
p + geom_histogram(binwidth = 1000) # the width of each category is 5
p <- ggplot(minneapolis_2017, aes(INCTOT))
p + geom_histogram(binwidth = 5000) # the width of each category is 5
p +  geom_histogram(bins = 30) # the number of bins is 3
p + geom_histogram(aes( y = ..density..), binwidth = 5000, col = 'Black', fill = 'White') + # use density instead of count
geom_density(alpha=.2, fill="Gray")
ggplot(minneapolis_2017, aes(x = factor(RACE), y = INCTOT)) +
geom_boxplot()
p <- ggplot(minneapolis, aes(x = factor(RACE), y = INCTOT))
p + geom_boxplot()
p <- ggplot(minneapolis, aes(x = factor(SEX), y = INCTOT))
p + geom_boxplot()
p <- ggplot(minneapolis_2017, aes(x = AGE, y = INCTOT)) +
geom_point()
p + coord_cartesian(xlim = c(10, 30), ylim = c(10000,20000))
p <- ggplot(minneapolis_2017, aes(x = AGE, y = INCTOT)) +
geom_point()
p + coord_cartesian(xlim = c(16, 100), ylim = c(0,20000))
p <- ggplot(minneapolis_2017, # Data
aes(x = AGE, y = INCTOT))) + # Aesthetics
p <- ggplot(minneapolis_2017, # Data
aes(x = AGE, y = INCTOT)) + # Aesthetics
geom_point()
p +  coord_fixed(ratio = 1) # 1 means x and y axes have the same unit
p <- ggplot(minneapolis_2017, # Data
aes(x = AGE, y = INCTOT)) + # Aesthetics
geom_point()
p +  coord_fixed(ratio = 100) # 1 means x and y axes have the same unit
p <- ggplot(minneapolis_2017, # Data
aes(x = AGE, y = INCTOT)) + # Aesthetics
geom_point()
p +  coord_fixed(ratio = 1000) # 1 means x and y axes have the same unit
p <- ggplot(minneapolis_2017, # Data
aes(x = AGE, y = INCTOT)) + # Aesthetics
geom_point()
p +  coord_fixed(ratio = 1/1000) # 1 means x and y axes have the same unit
p <- ggplot(minneapolis_2017, # Data
aes(x = AGE, y = INCTOT)) + # Aesthetics
geom_point()
p +  coord_fixed(ratio = 1/5000) # 1 means x and y axes have the same unit
p <- ggplot(minneapolis_2017, # Data
aes(x = AGE, y = INCTOT)) + # Aesthetics
geom_point()
p +  coord_fixed(ratio = 1/10000) # 1 means x and y axes have the same unit
p + coord_fixed(ratio = 1/20000)
p + coord_flip()
ggplot(minneapolis, aes(x = factor(SEX), y = INCTOT)) +
geom_boxplot() +
coord_flip()
ggplot(minneapolis_2017,
aes(x = RACE)) + # Aesthetics
geom_bar() +
scale_y_reverse()
ggplot(minneapolis_2017,
aes(x = RACE)) + # Aesthetics
geom_bar() +
scale_y_reverse()
ggplot(minneapolis_race, aes(x = '', fill = factor(RACE))) +
geom_bar(width = 1) +
coord_polar(theta = 'y')
ggplot(minneaplis_race, aes(x = RACE, y = count)) +
geom_bar(width = 1) +
coord_polar(theta = 'y')
ggplot(minneaplis_race, aes(x = RACE, y = count)) +
geom_col(width = 1) +
coord_polar(theta = 'y')
ggplot(minneapolis_2017, aes(x = '', fill = factor(RACE))) +
geom_bar(width = 1) +
coord_polar(theta = 'y')
ggplot(minneapolis_2017, aes(factor(RACE))) +
geom_bar(width = 1, col = 'Black', fill = 'Grey') +
coord_polar()
p <- ggplot(minneapolis_2017, aes(x = AGE, y = INCTOT)) +
geom_point()
p + labs(title = 'Age and personal income in Minneapolis (2017)', # title of the plot
subtitle = 'Data source: American Community Survey', # sub title
x = 'Age', # x label
y = 'Personal income (dollars)') # y label
p + ggtitle('Age and personal income in Minneapolis (2017)') +
xlab('Age') + # x label
ylab('Personal income (dollars)') # y label
p <- ggplot(minneapolis_2017, aes(x = factor(SEX), y = INCTOT))
p + geom_boxplot() +
scale_x_discrete(name = "Gender", # name of the x axis
labels = c('Male', 'Female')) # change 0 and 1 to automatic and manaual
p <- ggplot(minneapolis_2017, aes(x = factor(SEX), y = INCTOT)) +
geom_point() +
labs(title = 'Age and personal income in Minneapolis (2017)', # title of the plot
subtitle = 'Data source: American Community Survey', # sub title
x = 'Age', # x label
y = 'Personal income (dollars)') # y label
p # original plot
p <- ggplot(minneapolis_2017, aes(x = AGE, y = INCTOT)) +
geom_point() +
labs(title = 'Age and personal income in Minneapolis (2017)', # title of the plot
subtitle = 'Data source: American Community Survey', # sub title
x = 'Age', # x label
y = 'Personal income (dollars)') # y label
p # original plot
p + theme(plot.title = element_text(size = rel(2)))
p + theme(plot.title = element_text(size = 15))
p + theme(plot.background = element_rect(fill = 'red'))
p + theme(panel.background = element_rect(fill = 'green', colour = 'red'))
p + theme(panel.border = element_rect(linetype = 'dashed', fill = NA))
p + theme(panel.grid.major = element_line(colour = 'black'),
panel.grid.minor = element_line(colour = 'blue'))
p + theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
p + theme(
panel.background = element_rect(fill = NA),
panel.grid.major = element_line(colour = 'Blue'),
panel.ontop = TRUE
)
p + theme(
axis.line = element_line(size = 3, colour = 'red')
)
p + theme(
axis.text = element_text(colour = 'Green', size = 15)
)
p + theme(
axis.ticks = element_line(size = 1.5)
)
p + theme(
axis.title.y = element_text(size = rel(1.5), angle = 30)
)
p <- ggplot(mtcars, aes(wt, mpg)) +
geom_point(aes(colour = factor(cyl), shape = factor(vs))) +
labs(
x = 'Weight (1000 lbs)',
y = 'Fuel economy (mpg)',
colour = 'Cylinders',
shape = 'Transmission system'
)
p
p <- ggplot(minneapolis_emp, aes(AGE, INCTOT)) +
geom_point(aes(colour = factor(EMPSTAT))) +
labs(
x = 'Age',
y = 'Personal income (dollars)',
colour = 'Employment status',
)
p <- ggplot(minneapolis_emp, aes(AGE, INCTOT)) +
geom_point(aes(colour = factor(EMPSTAT))) +
labs(
x = 'Age',
y = 'Personal income (dollars)',
colour = 'Employment status',
)
p <- ggplot(minneapolis_emp, aes(AGE, INCTOT)) +
geom_point(aes(fill = factor(EMPSTAT))) +
labs(
x = 'Age',
y = 'Personal income (dollars)',
colour = 'Employment status',
)
p <- ggplot(minneapolis_emp, aes(AGE, INCTOT, colour = factor(EMPSTAT))) +
geom_point() +
labs(
x = 'Age',
y = 'Personal income (dollars)',
colour = 'Employment status',
)
p <- ggplot(minneapolis_emp, aes(x = AGE, y = INCTOT, colour = factor(EMPSTAT))) +
geom_point() +
labs(
x = 'Age',
y = 'Personal income (dollars)',
colour = 'Employment status',
)
ggplot(minneapolis_emp, aes(x = AGE, y = INCTOT, colour = factor(EMPSTAT))) +
geom_point()
p <- ggplot(minneapolis_emp, aes(x = AGE, y = INCTOT, colour = factor(EMPSTAT))) +
geom_point() +
labs(
x = 'Age',
y = 'Personal income (dollars)',
colour = 'Employment status',
)
p <- ggplot(minneapolis_emp, aes(x = AGE, y = INCTOT, colour = factor(EMPSTAT))) +
geom_point() +
labs(
x = 'Age',
y = 'Personal income (dollars)',
colour = 'Employment status'
)
p
p + theme(
legend.position = 'none'
)
p + theme(
legend.position = 'top'
)
p + theme(
legend.justification = 'top'
)
p + theme(
legend.position = c(.95, .95),
legend.justification = c('right', 'top'),
legend.box.just = 'right'
)
p + theme(
legend.box.background = element_rect(),
legend.box.margin = margin(6, 6, 6, 6)
)
p + theme(
legend.key = element_rect(fill = 'white', colour = 'black')
)
p + theme(
legend.text = element_text(size = 8, colour = 'red', face = 'bold')
)
p + theme_bw()
p + theme_minimal()
p + theme_dark()
